1. 引用多个class，之间需要 “，”

   .bar1, .bar2, .bar3{

   }

2. 给多个 element 添加属性 menu-icon

3. search bar 本质： input


4. overflow: auto/scroll                 确保产生scroll   
***white-space: nowrap;                  确保内容在同一行


5. display: flex;                         (Horizontal Scroll Menu)
   flex-direction: row;
   flex-wrap: nowrap;

   ** padding: 0;
      margin:0;

   此时产生的排列元素往往是拥挤的， 这时候把他们变的宽松的最好方法是： 改变子元素的 padding 进行微调


6.     (Horizontal Scroll Menu)
   
      方法一： 
   parent:  display: flex;
            flex-direction:row;
            flex-wrap: nowrap;
            justify-content: spacing-between;
   
   child:   padding

      方法二:

    parent:  ----

    child:   display: inline-block;
             width: 10%;                   ***
             padding



7.  (Vertical Menu)

    case 可以居中的前提： 
       
           1. 设置 width = 40%;
           2. margin:auto;

8.  在做 position：fixed 的 nav 时， 注意设置 width：100%；

9.  如果结构为

    <div>
        <a>1</a>
        <a>1</a>
        <a>1</a>
    </div>

    当 div 的 display：flex，则 a 自动变为 block ，这一点和 display：inline-block 很像。但是前者用于parent， 后者用于child

    如果结构为：

    <div>
       <div>
           <a>1</a>
           <a>1</a>
       </div>
       <div>
           <a>1</a>
           <a>1</a>
           <a>1</a>
       </div>
    </div>

    则 最外围的 display：flex 无法影响到最内侧的 a，解决办法：在中间层 div 同样设置： display：flex


10. Equal Width Menu links

   难点： 该设计中我们利用  justify-content: space-evenly; 对其中的 children 进行平均距离的排列，但出现如下情况：

   ____________________________________________
   |  | child |   | ......
   --------------------------------------------
   | -- a:width --|

   解决方法， 设置 a width 为 25%；(4个children)

11. 各种 dropdown 的整体思路：
   1. 触发element（一般button） + dropdown element（一般div） 
   2.用 flex 确定大体位置(也可以不使用flex， 因为总是会涉及到 display：none 的问题，如果已经定义为 flex，则会发生冲突
     因为需要后续显示时设定为：display：block)，
     
     再使用 absolute，精确位置

    好处：1. position定位精确，不随页面变化而变化
         2. absolute的元素体积会变小,出发鼠标hover等效果会更加精确。


    细节：

    1. 充分了解 box-shadow： 1px 1px 7px rgba(0,0,0,0.5) 中各个数据的含义
    2. 子类的 display：none 如何通过 hover 进行显示？

       父类：hover 子类{
           display：block；
       }
    
       翻译：当父类被 hover 时，其某个子类的 display：block；

    难点：dropdown menu in navbar

    <header>
        <a href="#">Home</a>
        <a href="#">News</a>
        <div>
            <button>Dropdown</button>                      button 的 style 参考同级的 a，
            <div class="content">                          a 要设置 border，不然大小会变
                 <a href = "#">link 1</a>
                 <a href = "#">link 2</a>        默认下拉菜单的宽度和button是一样的（flex的原因）
                 <a href = "#">link 3</a>        如果要给下拉菜单加宽，则在 .content使用 
            </div>                               width = 140%;
        </div>
    </header>

    有时候并不需要 absolute 协助进行定位，特别是下拉菜单本身就是 header 一部分的情况
    （dropdown menu in sidenav）这个时候需要特别注意

    在header中遇到 a 和 div（button + div） 混合出现的情况，除了每个a的style 和 button
    style要一致（padding，background-color，border等）外，还要使用
    align-items：center 协助进行居中，这样 button 才会看起来和 a 一模一样

    使用flex排列header上的元素后，其中的button一边会有一条很细的边，所以需要给button
    的height 单独加一条 style，使得 button 的style高度和header的高度一致即可；

    subnavigation menu

    如何给absolute的元素设置一个宽度横跨整个屏幕？

    width： 100vw；


12. 分页符的本质： 一组 anchor

13. hover 效果也可以用 transition 实现

    方法：

    1. 某 element 写下 css 效果
    2. element：hover 写下 hover 效果
    3. 1 中 增加 transition 变量

14. button group 本质

    display：flex 的 button  (只有 flex 可以让 button 连接在一起, inline 都不行)

15. 纵向 和 横向 排列的通用技巧区别：

    纵向需要额外关注 width

    二者都可以通过 padding 调整，但纵向的 padding 容易被 width 所限制

16. 用空元素 <div></div> 定义出的有颜色的块状结构都 必须 自定义高度和宽度


17. 空 div 和 dropdown 的合体 （split buttons）

    设计：

    <div>
        <button> button </button>                                 button 本体
        <div>                                                     dropdown 整体（absolute定位）
             <div></div>                                          dropdown 与 button 连接的部分(手写高宽)
             <div>                                                dropdown 剩余部分
                 <a></a>
                 <a></a>
                 <a></a>
             </div>
        </div>
    </div>

18. badge      突兀的各种小图形都是 badge

    如何画圆？   <div></div>       height:1rem   width:1rem   border-radius: 50px;


19. skill bar 的设计

    特点： 双色 bar 代表百分比的设计模式     

    方法：设计内外两层 <div> 的包裹结构
         外层设置为 width：100%， 代表全轴总宽度 100
         内层设置为 width：90%， 代表内层轴宽度占比

         两层之间使用 position：relative
                    position：absolute 进行“完全的覆盖”定位 


20.  双色bar （skill bar， notes）== absolute
     有颜色的 div                 == width height


21. styled hr        ---->     border
    一条垂直的线       ---->     border
    

20. 难点：重写自带的 element 中的样式
    比如：复选框的tip颜色
         range 轴的样式 

21. 如何改变 placeholder 的颜色

    ::placeholder{
        color:red;
    }

    如何改变选定文字效果?

    ::selection{
        color:red;
        background-color: yellow;
    }

22. breadcrumbs （本质：li）

    <ul>
       <li><a>Home</a></li>
    </ul>

    li:      list-style-type: none
    a:       text-decoration: none
    ul:      display: flex;
             flex-direction: row;
             flex-wrap: nowrap;
    
   *li:before{
       content: "/\00a0";
   }

23. margin collapse 

    仅存在于 block 和 inline-block， 不存在于 flex，
    这也是为什么 flex 有 gap 这个属性的原因


24. 如何重写 checkbox 和 radio ？

    <form>                                        ----checkbox的input在label前面
        <input type="checkbox" id="checkbox" name="checkbox" class="checkbox"/>
        <label for = "checkbox"> plz choose your answer </label>
    </form>

    1. 先让css自带的效果消失
      
    .checkbox{
       display:none;
       appearance: none;
    }

 
    2.写自己定义的效果,用absolute定位

    .form{
        position:relative;
    } 
    
    .label:before{
       position:absolute;                                         四个属性缺一不可
       content:"";
       border:1px solid black;
       padding: 5px;(或者用height + width 撑开)
       top:..;
       left:..;
    }

    3. 点击后效果                                      和dropdown的显示写法类似，但是是“+”

    .checkbox:checked + label:before{                         
        background-color:black;
    }

    
    4. radio唯一的区别是效果的模仿
       需要使用border-radius: 50%; 制作一个圆形


25. tooltip

    ________/\___________
   |                     |
   <       tooltip       >
   |________  ___________|
            \/

    难点： 如何制作相应的arrow区域

    .tooltip:after{                              before 也可以 仅仅是定位问题
       position: absolute;                       absolute 两个作用：1.定位 2.撑开图形
       content: "";
       border-width:5px;
       border-style:solid;
       border-color: black transparent transparent transparent
    }                                             ---black的位置决定了arrow的方向


26. transition 的位置区别

    .button{
         ....
         transition: all 0.5s;
    }

    .button:hover{
        opacity: 0.7;
        transition: all 0.5s;
    }

    以上的例子中，transition 放置的位置不同会有什么区别吗？

    1. 第一种情况下，button所有的“变化”都会视为“动画”（hover + style）
    2. 第二种情况下，仅有hover中的变化被视为动画

27. sidebar 设计的小心得

    如何实现 sidebar 从“消失”到“出现”的过程中屏幕右移的情况？

    屏幕的 position：absolute，整体右移 sidebar 的宽度即可

    （collapsed sidebar）

28. 如何让 img 正好被箍在 div 之中？

    .img{
        display:block;
        margin:auto;
        width:100%;                               width 可调节
    }

    注意：不能设置height，否则无法在高度上自行调整以保证其嵌入。

29. overlay 效果的本质 （div）的覆盖

    原理：
    <div class="container">                 position：relative
       <img src = "" alt = "" />
       <div>                                position：absolute；
          <div> Hello World <div>
       </div>
    </div>

    利用 absolute 进行定位，hover 改变 opacity
    注意： 利用 hover 下 对 img 和 与之平级的 div 的 opacity 进行调整
          可以调整出不同的样式


slide 动作的本质 

      height，width的变化时动作
      top bottom left right 的配合是变化的方向（position：absolute/fixed）

30. overlay slide (image overlay slide/ image overlay zoom)

   hover 前：
           
             top:0;
           
             height: 0;            height:0;       

   hover 后：
                                   bottom:0;

             height: 100%;         height:100%

   上下进出，width保持不变，height在变化
   左右进出，height不变，width在变化

   absolute 下， top 和 height 的使用 tip：二者相加得 100
   （image overlay title）

31. top = 100%
    bottom = 100%
    left = 100%
    right = 100%

    究竟在哪里? (用 abolute 隐藏的方法)  login form

32. div 和 里面的文字都变半透明得方法

    background-color：black；
    opacity：0.5；

    div 半透明 但是里面的文字不受影响的办法

    background-color: rgba(0,0,0,0.5);


33. 图片模糊处理

    .image{

        filter(blur(5px));
    }

34. thumbnails

    缩略图的边框：加粗的border


35. Scroll To Top Button

    写一个回到 top 的 anchor

36. 对一个 div 一分为二？ （split screen）

    还是 flex

37. 调整图片大小的 tricky （续28）

       <div>
          <img src="#" alt="img" />
       </div>

    1. 如果想要图片刚好被箍在 div 之中，则需要设置 div 的宽度（px，%）
       然后将 img 宽度设置到和 div 一致
       （px 一致 或者 width：100%）
       再设置：

       display：block；
       margin: auto;
       width：（== div：width）

       即可

    2. 如果想要一个正方形/正圆形的图片被箍在 div 之中，则设置 div 的宽度，
       然后将 img 宽度设置与其一致，再设置 img 高度与宽度一致

       display：block;
       margin:auto;
       width: 100%;
       height: 200px;


38. z-index 

    flex 的巧妙布局 （timeline）